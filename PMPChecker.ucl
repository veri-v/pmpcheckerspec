module common {
    type cfg_t = record {
        l   : boolean,  // Locked PMP flag, not being used for now
//        res : bv2,    // Reserve bits for PMP, not being used
        a   : bv2,      // Address mode, currently only using NAPOT (assumed at top level) 
        r   : boolean,
        w   : boolean,
        x   : boolean
    };
    
    type pmp_t = record {
        cfg     : cfg_t,
        addr    : bv30,   // Is not used here, addr is used as an intermediate value which sets mask
        mask    : bv32
    };
}
    

module PMPChecker {
  type * = common.*;

  input reset : boolean;
  input io_prv : bv2;

  input io_pmp : [bv3]pmp_t;

  input io_addr : bv32;
  input io_size : bv2;
  output io_r : boolean;
  output io_w : boolean;
  output io_x : boolean;
  // Nodes
  var def : boolean;
  var napot : boolean;
  var _T_39 : bv6;
  var _T_40 : bv3;
  var _T_41 : bv3;
  var _GEN_0 : bv32;
  var _T_42 : bv32;
  var _T_43 : bv29;
  var _GEN_1 : bv32;
  var _T_44 : bv32;
  var _T_45 : bv32;
  var _T_46 : bv32;
  var _T_47 : bv32;
  var _T_48 : bv29;
  var _T_49 : bv29;
  var _T_50 : bv29;
  var _T_51 : bv29;
  var _T_52 : bv29;
  var _T_53 : boolean;
  var _T_54 : bv3;
  var _T_59 : bv3;
  var _T_60 : bv3;
  var _T_61 : bv3;
  var _T_62 : bv3;
  var _T_63 : bv3;
  var _T_64 : boolean;
  var _T_65 : boolean;
  var _T_66 : boolean;
  var _GEN_3 : bv32;
  var _T_72 : bv32;
  var _T_73 : bv32;
  var _T_74 : bv32;
  var _T_75 : bv32;
  var _T_76 : bv29;
  var _T_77 : boolean;
  var _T_84 : bv29;
  var _T_85 : boolean;
  var _T_87 : bv3;
  var _T_92 : bv3;
  var _T_93 : boolean;
  var _T_94 : boolean;
  var _T_95 : boolean;
  var _T_96 : boolean;
  var _T_103 : boolean;
  var _T_111 : boolean;
  var _T_119 : boolean;
  var _T_120 : boolean;
  var _T_121 : boolean;
  var _T_122 : boolean;
  var _T_123 : boolean;
  var _T_124 : boolean;
  var _T_125 : boolean;
  var _T_126 : boolean;
  var _T_145 : bv3;
  var _T_146 : bv3;
  var _T_147 : boolean;
  var _T_148 : boolean;
  var _T_164 : bv3;
  var _T_165 : boolean;
  var _T_166 : boolean;
  var _T_167 : boolean;
  var _T_168 : boolean;
  var _T_169 : bv3;
  var _T_170 : bv3;
  var _T_171 : bv3;
  var _T_172 : boolean;
  var _T_174 : boolean;
  var _T_177 : boolean;
  var _T_178 : boolean;
  var _T_179 : boolean;
  var _T_180 : boolean;
  var _T_181 : boolean;
  var _T_182 : boolean;
  var _T_183_cfg_x : boolean;
  var _T_183_cfg_w : boolean;
  var _T_183_cfg_r : boolean;
  var _T_184 : boolean;
  var _T_189 : bv32;
  var _T_196 : bv29;
  var _T_198 : bv29;
  var _T_199 : bv29;
  var _T_200 : boolean;
  var _T_207 : bv3;
  var _T_208 : bv3;
  var _T_209 : bv3;
  var _T_210 : bv3;
  var _T_211 : boolean;
  var _T_212 : boolean;
  var _T_213 : boolean;
  var _GEN_16 : bv32;
  var _T_219 : bv32;
  var _T_220 : bv32;
  var _T_221 : bv32;
  var _T_222 : bv32;
  var _T_223 : bv29;
  var _T_224 : boolean;
  var _T_231 : bv29;
  var _T_232 : boolean;
  var _T_239 : bv3;
  var _T_240 : boolean;
  var _T_241 : boolean;
  var _T_242 : boolean;
  var _T_243 : boolean;
  var _T_266 : boolean;
  var _T_267 : boolean;
  var _T_268 : boolean;
  var _T_269 : boolean;
  var _T_270 : boolean;
  var _T_271 : boolean;
  var _T_272 : boolean;
  var _T_273 : boolean;
  var _T_293 : bv3;
  var _T_294 : boolean;
  var _T_295 : boolean;
  var _T_311 : bv3;
  var _T_312 : boolean;
  var _T_313 : boolean;
  var _T_314 : boolean;
  var _T_315 : boolean;
  var _T_316 : bv3;
  var _T_317 : bv3;
  var _T_318 : bv3;
  var _T_319 : boolean;
  var _T_321 : boolean;
  var _T_324 : boolean;
  var _T_325 : boolean;
  var _T_326 : boolean;
  var _T_327 : boolean;
  var _T_328 : boolean;
  var _T_329 : boolean;
  var _T_330_cfg_x : boolean;
  var _T_330_cfg_w : boolean;
  var _T_330_cfg_r : boolean;
  var _T_331 : boolean;
  var _T_336 : bv32;
  var _T_343 : bv29;
  var _T_345 : bv29;
  var _T_346 : bv29;
  var _T_347 : boolean;
  var _T_354 : bv3;
  var _T_355 : bv3;
  var _T_356 : bv3;
  var _T_357 : bv3;
  var _T_358 : boolean;
  var _T_359 : boolean;
  var _T_360 : boolean;
  var _GEN_29 : bv32;
  var _T_366 : bv32;
  var _T_367 : bv32;
  var _T_368 : bv32;
  var _T_369 : bv32;
  var _T_370 : bv29;
  var _T_371 : boolean;
  var _T_378 : bv29;
  var _T_379 : boolean;
  var _T_386 : bv3;
  var _T_387 : boolean;
  var _T_388 : boolean;
  var _T_389 : boolean;
  var _T_390 : boolean;
  var _T_413 : boolean;
  var _T_414 : boolean;
  var _T_415 : boolean;
  var _T_416 : boolean;
  var _T_417 : boolean;
  var _T_418 : boolean;
  var _T_419 : boolean;
  var _T_420 : boolean;
  var _T_440 : bv3;
  var _T_441 : boolean;
  var _T_442 : boolean;
  var _T_458 : bv3;
  var _T_459 : boolean;
  var _T_460 : boolean;
  var _T_461 : boolean;
  var _T_462 : boolean;
  var _T_463 : bv3;
  var _T_464 : bv3;
  var _T_465 : bv3;
  var _T_466 : boolean;
  var _T_468 : boolean;
  var _T_471 : boolean;
  var _T_472 : boolean;
  var _T_473 : boolean;
  var _T_474 : boolean;
  var _T_475 : boolean;
  var _T_476 : boolean;
  var _T_477_cfg_x : boolean;
  var _T_477_cfg_w : boolean;
  var _T_477_cfg_r : boolean;
  var _T_478 : boolean;
  var _T_483 : bv32;
  var _T_490 : bv29;
  var _T_492 : bv29;
  var _T_493 : bv29;
  var _T_494 : boolean;
  var _T_501 : bv3;
  var _T_502 : bv3;
  var _T_503 : bv3;
  var _T_504 : bv3;
  var _T_505 : boolean;
  var _T_506 : boolean;
  var _T_507 : boolean;
  var _GEN_42 : bv32;
  var _T_513 : bv32;
  var _T_514 : bv32;
  var _T_515 : bv32;
  var _T_516 : bv32;
  var _T_517 : bv29;
  var _T_518 : boolean;
  var _T_525 : bv29;
  var _T_526 : boolean;
  var _T_533 : bv3;
  var _T_534 : boolean;
  var _T_535 : boolean;
  var _T_536 : boolean;
  var _T_537 : boolean;
  var _T_560 : boolean;
  var _T_561 : boolean;
  var _T_562 : boolean;
  var _T_563 : boolean;
  var _T_564 : boolean;
  var _T_565 : boolean;
  var _T_566 : boolean;
  var _T_567 : boolean;
  var _T_587 : bv3;
  var _T_588 : boolean;
  var _T_589 : boolean;
  var _T_605 : bv3;
  var _T_606 : boolean;
  var _T_607 : boolean;
  var _T_608 : boolean;
  var _T_609 : boolean;
  var _T_610 : bv3;
  var _T_611 : bv3;
  var _T_612 : bv3;
  var _T_613 : boolean;
  var _T_615 : boolean;
  var _T_618 : boolean;
  var _T_619 : boolean;
  var _T_620 : boolean;
  var _T_621 : boolean;
  var _T_622 : boolean;
  var _T_623 : boolean;
  var _T_624_cfg_x : boolean;
  var _T_624_cfg_w : boolean;
  var _T_624_cfg_r : boolean;
  var _T_625 : boolean;
  var _T_630 : bv32;
  var _T_637 : bv29;
  var _T_639 : bv29;
  var _T_640 : bv29;
  var _T_641 : boolean;
  var _T_648 : bv3;
  var _T_649 : bv3;
  var _T_650 : bv3;
  var _T_651 : bv3;
  var _T_652 : boolean;
  var _T_653 : boolean;
  var _T_654 : boolean;
  var _GEN_55 : bv32;
  var _T_660 : bv32;
  var _T_661 : bv32;
  var _T_662 : bv32;
  var _T_663 : bv32;
  var _T_664 : bv29;
  var _T_665 : boolean;
  var _T_672 : bv29;
  var _T_673 : boolean;
  var _T_680 : bv3;
  var _T_681 : boolean;
  var _T_682 : boolean;
  var _T_683 : boolean;
  var _T_684 : boolean;
  var _T_707 : boolean;
  var _T_708 : boolean;
  var _T_709 : boolean;
  var _T_710 : boolean;
  var _T_711 : boolean;
  var _T_712 : boolean;
  var _T_713 : boolean;
  var _T_714 : boolean;
  var _T_734 : bv3;
  var _T_735 : boolean;
  var _T_736 : boolean;
  var _T_752 : bv3;
  var _T_753 : boolean;
  var _T_754 : boolean;
  var _T_755 : boolean;
  var _T_756 : boolean;
  var _T_757 : bv3;
  var _T_758 : bv3;
  var _T_759 : bv3;
  var _T_760 : boolean;
  var _T_762 : boolean;
  var _T_765 : boolean;
  var _T_766 : boolean;
  var _T_767 : boolean;
  var _T_768 : boolean;
  var _T_769 : boolean;
  var _T_770 : boolean;
  var _T_771_cfg_x : boolean;
  var _T_771_cfg_w : boolean;
  var _T_771_cfg_r : boolean;
  var _T_772 : boolean;
  var _T_777 : bv32;
  var _T_784 : bv29;
  var _T_786 : bv29;
  var _T_787 : bv29;
  var _T_788 : boolean;
  var _T_795 : bv3;
  var _T_796 : bv3;
  var _T_797 : bv3;
  var _T_798 : bv3;
  var _T_799 : boolean;
  var _T_800 : boolean;
  var _T_801 : boolean;
  var _GEN_68 : bv32;
  var _T_807 : bv32;
  var _T_808 : bv32;
  var _T_809 : bv32;
  var _T_810 : bv32;
  var _T_811 : bv29;
  var _T_812 : boolean;
  var _T_819 : bv29;
  var _T_820 : boolean;
  var _T_827 : bv3;
  var _T_828 : boolean;
  var _T_829 : boolean;
  var _T_830 : boolean;
  var _T_831 : boolean;
  var _T_854 : boolean;
  var _T_855 : boolean;
  var _T_856 : boolean;
  var _T_857 : boolean;
  var _T_858 : boolean;
  var _T_859 : boolean;
  var _T_860 : boolean;
  var _T_861 : boolean;
  var _T_881 : bv3;
  var _T_882 : boolean;
  var _T_883 : boolean;
  var _T_899 : bv3;
  var _T_900 : boolean;
  var _T_901 : boolean;
  var _T_902 : boolean;
  var _T_903 : boolean;
  var _T_904 : bv3;
  var _T_905 : bv3;
  var _T_906 : bv3;
  var _T_907 : boolean;
  var _T_909 : boolean;
  var _T_912 : boolean;
  var _T_913 : boolean;
  var _T_914 : boolean;
  var _T_915 : boolean;
  var _T_916 : boolean;
  var _T_917 : boolean;
  var _T_918_cfg_x : boolean;
  var _T_918_cfg_w : boolean;
  var _T_918_cfg_r : boolean;
  var _T_919 : boolean;
  var _T_924 : bv32;
  var _T_931 : bv29;
  var _T_933 : bv29;
  var _T_934 : bv29;
  var _T_935 : boolean;
  var _T_942 : bv3;
  var _T_943 : bv3;
  var _T_944 : bv3;
  var _T_945 : bv3;
  var _T_946 : boolean;
  var _T_947 : boolean;
  var _T_948 : boolean;
  var _GEN_81 : bv32;
  var _T_954 : bv32;
  var _T_955 : bv32;
  var _T_956 : bv32;
  var _T_957 : bv32;
  var _T_958 : bv29;
  var _T_959 : boolean;
  var _T_966 : bv29;
  var _T_967 : boolean;
  var _T_974 : bv3;
  var _T_975 : boolean;
  var _T_976 : boolean;
  var _T_977 : boolean;
  var _T_978 : boolean;
  var _T_1001 : boolean;
  var _T_1002 : boolean;
  var _T_1003 : boolean;
  var _T_1004 : boolean;
  var _T_1005 : boolean;
  var _T_1006 : boolean;
  var _T_1007 : boolean;
  var _T_1008 : boolean;
  var _T_1028 : bv3;
  var _T_1029 : boolean;
  var _T_1030 : boolean;
  var _T_1046 : bv3;
  var _T_1047 : boolean;
  var _T_1048 : boolean;
  var _T_1049 : boolean;
  var _T_1050 : boolean;
  var _T_1051 : bv3;
  var _T_1052 : bv3;
  var _T_1053 : bv3;
  var _T_1054 : boolean;
  var _T_1056 : boolean;
  var _T_1059 : boolean;
  var _T_1060 : boolean;
  var _T_1061 : boolean;
  var _T_1062 : boolean;
  var _T_1063 : boolean;
  var _T_1064 : boolean;
  var _T_1065_cfg_x : boolean;
  var _T_1065_cfg_w : boolean;
  var _T_1065_cfg_r : boolean;
  var _T_1066 : boolean;
  var _T_1071 : bv32;
  var _T_1078 : bv29;
  var _T_1080 : bv29;
  var _T_1081 : bv29;
  var _T_1082 : boolean;
  var _T_1089 : bv3;
  var _T_1090 : bv3;
  var _T_1091 : bv3;
  var _T_1092 : bv3;
  var _T_1093 : boolean;
  var _T_1094 : boolean;
  var _T_1095 : boolean;
  var _T_1148 : boolean;
  var _T_1149 : boolean;
  var _T_1150 : boolean;
  var _T_1152 : boolean;
  var _T_1153 : boolean;
  var _T_1154 : boolean;
  var _T_1155 : boolean;
  var _T_1193 : bv3;
  var _T_1194 : boolean;
  var _T_1195 : boolean;
  var _T_1197 : boolean;
  var _T_1198 : bv3;
  var _T_1199 : bv3;
  var _T_1200 : bv3;
  var _T_1201 : boolean;
  var _T_1203 : boolean;
  var _T_1206 : boolean;
  var _T_1207 : boolean;
  var _T_1208 : boolean;
  var _T_1209 : boolean;
  var _T_1210 : boolean;
  var _T_1211 : boolean;
  

  init {
  }
  
  next {
    def' = 0bv1 ++ io_prv' > 0bv1 ++ 1bv2;
    napot' = (io_pmp'[7bv3]).cfg.a[1:1] == 1bv1;                                            
    _T_39' = bv_left_shift(bv_zero_extend(4, io_size'), 7bv6);
    _T_40' = _T_39'[2:0];
    _T_41' = ~_T_40';
    _GEN_0' = bv_zero_extend(29, _T_41');
    _T_42' = (io_pmp'[7bv3]).mask | _GEN_0';
    _T_43' = io_addr'[31:3];
    _GEN_1' = bv_zero_extend(2, (io_pmp'[7bv3]).addr);
    _T_44' = bv_left_shift(2, _GEN_1');
    _T_45' = ~_T_44';
    _T_46' = _T_45' | 3bv32;
    _T_47' = ~_T_46';
    _T_48' = _T_47'[31:3];
    _T_49' = (io_pmp'[7bv3]).mask[31:3];
    _T_50' = _T_43' ^ _T_48';
    _T_51' = ~_T_49';
    _T_52' = _T_50' & _T_51';
    _T_53' = _T_52' == 0bv29;
    _T_54' = io_addr'[2:0];
    _T_59' = _T_47'[2:0];
    _T_60' = _T_42'[2:0];
    _T_61' = _T_54' ^ _T_59';
    _T_62' = ~_T_60';
    _T_63' = _T_61' & _T_62';
    _T_64' = _T_63' == 0bv3;
    _T_65' = _T_53' && _T_64';
    _T_66' = (io_pmp'[7bv3]).cfg.a[0:0] == 1bv1;
    _GEN_3' = bv_zero_extend(2, (io_pmp'[6bv3]).addr);
    _T_72' = bv_left_shift(2, _GEN_3');
    _T_73' = ~_T_72';
    _T_74' = _T_73' | 3bv32;
    _T_75' = ~_T_74';
    _T_76' = _T_75'[31:3];
    _T_77' = 0bv1 ++ _T_43' < 0bv1 ++ _T_76';
    _T_84' = _T_43' ^ _T_76';
    _T_85' = _T_84' == 0bv29;
    _T_87' = _T_54' | _T_41';
    _T_92' = _T_75'[2:0];
    _T_93' = 0bv1 ++ _T_87' < 0bv1 ++ _T_92';
    _T_94' = _T_85' && _T_93';
    _T_95' = _T_77' || _T_94';
    _T_96' = _T_95' == false;
    _T_103' = 0bv1 ++ _T_43' < 0bv1 ++ _T_48';
    _T_111' = _T_50' == 0bv29;
    _T_119' = 0bv1 ++ _T_54' < 0bv1 ++ _T_59';
    _T_120' = _T_111' && _T_119';
    _T_121' = _T_103' || _T_120';
    _T_122' = _T_96' && _T_121';
    _T_123' = _T_66' && _T_122';
    _T_124' = if (napot') then (_T_65') else (_T_123');
    _T_125' = (io_pmp'[7bv3]).cfg.l == false;
    _T_126' = def' && _T_125';
    _T_145' = ~_T_54';
    _T_146' = _T_92' & _T_145';
    _T_147' = _T_146' != 0bv3;
    _T_148' = _T_85' && _T_147';
    _T_164' = _T_59' & _T_87';
    _T_165' = _T_164' != 0bv3;
    _T_166' = _T_111' && _T_165';
    _T_167' = _T_148' || _T_166';
    _T_168' = _T_167' == false;
    _T_169' = (io_pmp'[7bv3]).mask[2:0];
    _T_170' = ~_T_169';
    _T_171' = _T_41' & _T_170';
    _T_172' = _T_171' == 0bv3;
    _T_174' = if (napot') then (_T_172') else (_T_168');
    _T_177' = _T_174' && (io_pmp'[7bv3]).cfg.r;
    _T_178' = _T_177' || _T_126';
    _T_179' = _T_174' && (io_pmp'[7bv3]).cfg.w;
    _T_180' = _T_179' || _T_126';
    _T_181' = _T_174' && (io_pmp'[7bv3]).cfg.x;
    _T_182' = _T_181' || _T_126';
    _T_183_cfg_x' = if (_T_124') then (_T_182') else (def');
    _T_183_cfg_w' = if (_T_124') then (_T_180') else (def');
    _T_183_cfg_r' = if (_T_124') then (_T_178') else (def');
    _T_184' = (io_pmp'[6bv3]).cfg.a[1:1] == 1bv1;
    _T_189' = (io_pmp'[6bv3]).mask | _GEN_0';
    _T_196' = (io_pmp'[6bv3]).mask[31:3];
    _T_198' = ~_T_196';
    _T_199' = _T_84' & _T_198';
    _T_200' = _T_199' == 0bv29;
    _T_207' = _T_189'[2:0];
    _T_208' = _T_54' ^ _T_92';
    _T_209' = ~_T_207';
    _T_210' = _T_208' & _T_209';
    _T_211' = _T_210' == 0bv3;
    _T_212' = _T_200' && _T_211';
    _T_213' = (io_pmp'[6bv3]).cfg.a[0:0] == 1bv1;
    _GEN_16' = bv_zero_extend(2, (io_pmp'[5bv3]).addr);
    _T_219' = bv_left_shift(2, _GEN_16');
    _T_220' = ~_T_219';
    _T_221' = _T_220' | 3bv32;
    _T_222' = ~_T_221';
    _T_223' = _T_222'[31:3];
    _T_224' = 0bv1 ++ _T_43' < 0bv1 ++ _T_223';
    _T_231' = _T_43' ^ _T_223';
    _T_232' = _T_231' == 0bv29;
    _T_239' = _T_222'[2:0];
    _T_240' = 0bv1 ++ _T_87' < 0bv1 ++ _T_239';
    _T_241' = _T_232' && _T_240';
    _T_242' = _T_224' || _T_241';
    _T_243' = _T_242' == false;
    _T_266' = 0bv1 ++ _T_54' < 0bv1 ++ _T_92';
    _T_267' = _T_85' && _T_266';
    _T_268' = _T_77' || _T_267';
    _T_269' = _T_243' && _T_268';
    _T_270' = _T_213' && _T_269';
    _T_271' = if (_T_184') then (_T_212') else (_T_270');
    _T_272' = (io_pmp'[6bv3]).cfg.l == false;
    _T_273' = def' && _T_272';
    _T_293' = _T_239' & _T_145';
    _T_294' = _T_293' != 0bv3;
    _T_295' = _T_232' && _T_294';
    _T_311' = _T_92' & _T_87';
    _T_312' = _T_311' != 0bv3;
    _T_313' = _T_85' && _T_312';
    _T_314' = _T_295' || _T_313';
    _T_315' = _T_314' == false;
    _T_316' = (io_pmp'[6bv3]).mask[2:0];
    _T_317' = ~_T_316';
    _T_318' = _T_41' & _T_317';
    _T_319' = _T_318' == 0bv3;
    _T_321' = if (_T_184') then (_T_319') else (_T_315');
    _T_324' = _T_321' && (io_pmp'[6bv3]).cfg.r;
    _T_325' = _T_324' || _T_273';
    _T_326' = _T_321' && (io_pmp'[6bv3]).cfg.w;
    _T_327' = _T_326' || _T_273';
    _T_328' = _T_321' && (io_pmp'[6bv3]).cfg.x;
    _T_329' = _T_328' || _T_273';
    _T_330_cfg_x' = if (_T_271') then (_T_329') else (_T_183_cfg_x');
    _T_330_cfg_w' = if (_T_271') then (_T_327') else (_T_183_cfg_w');
    _T_330_cfg_r' = if (_T_271') then (_T_325') else (_T_183_cfg_r');
    _T_331' = (io_pmp'[5bv3]).cfg.a[1:1] == 1bv1;
    _T_336' = (io_pmp'[5bv3]).mask | _GEN_0';
    _T_343' = (io_pmp'[5bv3]).mask[31:3];
    _T_345' = ~_T_343';
    _T_346' = _T_231' & _T_345';
    _T_347' = _T_346' == 0bv29;
    _T_354' = _T_336'[2:0];
    _T_355' = _T_54' ^ _T_239';
    _T_356' = ~_T_354';
    _T_357' = _T_355' & _T_356';
    _T_358' = _T_357' == 0bv3;
    _T_359' = _T_347' && _T_358';
    _T_360' = (io_pmp'[5bv3]).cfg.a[0:0] == 1bv1;
    _GEN_29' = bv_zero_extend(2, (io_pmp'[4bv3]).addr);
    _T_366' = bv_left_shift(2, _GEN_29');
    _T_367' = ~_T_366';
    _T_368' = _T_367' | 3bv32;
    _T_369' = ~_T_368';
    _T_370' = _T_369'[31:3];
    _T_371' = 0bv1 ++ _T_43' < 0bv1 ++ _T_370';
    _T_378' = _T_43' ^ _T_370';
    _T_379' = _T_378' == 0bv29;
    _T_386' = _T_369'[2:0];
    _T_387' = 0bv1 ++ _T_87' < 0bv1 ++ _T_386';
    _T_388' = _T_379' && _T_387';
    _T_389' = _T_371' || _T_388';
    _T_390' = _T_389' == false;
    _T_413' = 0bv1 ++ _T_54' < 0bv1 ++ _T_239';
    _T_414' = _T_232' && _T_413';
    _T_415' = _T_224' || _T_414';
    _T_416' = _T_390' && _T_415';
    _T_417' = _T_360' && _T_416';
    _T_418' = if (_T_331') then (_T_359') else (_T_417');
    _T_419' = (io_pmp'[5bv3]).cfg.l == false;
    _T_420' = def' && _T_419';
    _T_440' = _T_386' & _T_145';
    _T_441' = _T_440' != 0bv3;
    _T_442' = _T_379' && _T_441';
    _T_458' = _T_239' & _T_87';
    _T_459' = _T_458' != 0bv3;
    _T_460' = _T_232' && _T_459';
    _T_461' = _T_442' || _T_460';
    _T_462' = _T_461' == false;
    _T_463' = (io_pmp'[5bv3]).mask[2:0];
    _T_464' = ~_T_463';
    _T_465' = _T_41' & _T_464';
    _T_466' = _T_465' == 0bv3;
    _T_468' = if (_T_331') then (_T_466') else (_T_462');
    _T_471' = _T_468' && (io_pmp'[5bv3]).cfg.r;
    _T_472' = _T_471' || _T_420';
    _T_473' = _T_468' && (io_pmp'[5bv3]).cfg.w;
    _T_474' = _T_473' || _T_420';
    _T_475' = _T_468' && (io_pmp'[5bv3]).cfg.x;
    _T_476' = _T_475' || _T_420';
    _T_477_cfg_x' = if (_T_418') then (_T_476') else (_T_330_cfg_x');
    _T_477_cfg_w' = if (_T_418') then (_T_474') else (_T_330_cfg_w');
    _T_477_cfg_r' = if (_T_418') then (_T_472') else (_T_330_cfg_r');
    _T_478' = (io_pmp'[4bv3]).cfg.a[1:1] == 1bv1;
    _T_483' = (io_pmp'[4bv3]).mask | _GEN_0';
    _T_490' = (io_pmp'[4bv3]).mask[31:3];
    _T_492' = ~_T_490';
    _T_493' = _T_378' & _T_492';
    _T_494' = _T_493' == 0bv29;
    _T_501' = _T_483'[2:0];
    _T_502' = _T_54' ^ _T_386';
    _T_503' = ~_T_501';
    _T_504' = _T_502' & _T_503';
    _T_505' = _T_504' == 0bv3;
    _T_506' = _T_494' && _T_505';
    _T_507' = (io_pmp'[4bv3]).cfg.a[0:0] == 1bv1;
    _GEN_42' = bv_zero_extend(2, (io_pmp'[3bv3]).addr);
    _T_513' = bv_left_shift(2, _GEN_42');
    _T_514' = ~_T_513';
    _T_515' = _T_514' | 3bv32;
    _T_516' = ~_T_515';
    _T_517' = _T_516'[31:3];
    _T_518' = 0bv1 ++ _T_43' < 0bv1 ++ _T_517';
    _T_525' = _T_43' ^ _T_517';
    _T_526' = _T_525' == 0bv29;
    _T_533' = _T_516'[2:0];
    _T_534' = 0bv1 ++ _T_87' < 0bv1 ++ _T_533';
    _T_535' = _T_526' && _T_534';
    _T_536' = _T_518' || _T_535';
    _T_537' = _T_536' == false;
    _T_560' = 0bv1 ++ _T_54' < 0bv1 ++ _T_386';
    _T_561' = _T_379' && _T_560';
    _T_562' = _T_371' || _T_561';
    _T_563' = _T_537' && _T_562';
    _T_564' = _T_507' && _T_563';
    _T_565' = if (_T_478') then (_T_506') else (_T_564');
    _T_566' = (io_pmp'[4bv3]).cfg.l == false;
    _T_567' = def' && _T_566';
    _T_587' = _T_533' & _T_145';
    _T_588' = _T_587' != 0bv3;
    _T_589' = _T_526' && _T_588';
    _T_605' = _T_386' & _T_87';
    _T_606' = _T_605' != 0bv3;
    _T_607' = _T_379' && _T_606';
    _T_608' = _T_589' || _T_607';
    _T_609' = _T_608' == false;
    _T_610' = (io_pmp'[4bv3]).mask[2:0];
    _T_611' = ~_T_610';
    _T_612' = _T_41' & _T_611';
    _T_613' = _T_612' == 0bv3;
    _T_615' = if (_T_478') then (_T_613') else (_T_609');
    _T_618' = _T_615' && (io_pmp'[4bv3]).cfg.r;
    _T_619' = _T_618' || _T_567';
    _T_620' = _T_615' && (io_pmp'[4bv3]).cfg.w;
    _T_621' = _T_620' || _T_567';
    _T_622' = _T_615' && (io_pmp'[4bv3]).cfg.x;
    _T_623' = _T_622' || _T_567';
    _T_624_cfg_x' = if (_T_565') then (_T_623') else (_T_477_cfg_x');
    _T_624_cfg_w' = if (_T_565') then (_T_621') else (_T_477_cfg_w');
    _T_624_cfg_r' = if (_T_565') then (_T_619') else (_T_477_cfg_r');
    _T_625' = (io_pmp'[3bv3]).cfg.a[1:1] == 1bv1;
    _T_630' = (io_pmp'[3bv3]).mask | _GEN_0';
    _T_637' = (io_pmp'[3bv3]).mask[31:3];
    _T_639' = ~_T_637';
    _T_640' = _T_525' & _T_639';
    _T_641' = _T_640' == 0bv29;
    _T_648' = _T_630'[2:0];
    _T_649' = _T_54' ^ _T_533';
    _T_650' = ~_T_648';
    _T_651' = _T_649' & _T_650';
    _T_652' = _T_651' == 0bv3;
    _T_653' = _T_641' && _T_652';
    _T_654' = (io_pmp'[3bv3]).cfg.a[0:0] == 1bv1;
    _GEN_55' = bv_zero_extend(2, (io_pmp'[2bv3]).addr);
    _T_660' = bv_left_shift(2, _GEN_55');
    _T_661' = ~_T_660';
    _T_662' = _T_661' | 3bv32;
    _T_663' = ~_T_662';
    _T_664' = _T_663'[31:3];
    _T_665' = 0bv1 ++ _T_43' < 0bv1 ++ _T_664';
    _T_672' = _T_43' ^ _T_664';
    _T_673' = _T_672' == 0bv29;
    _T_680' = _T_663'[2:0];
    _T_681' = 0bv1 ++ _T_87' < 0bv1 ++ _T_680';
    _T_682' = _T_673' && _T_681';
    _T_683' = _T_665' || _T_682';
    _T_684' = _T_683' == false;
    _T_707' = 0bv1 ++ _T_54' < 0bv1 ++ _T_533';
    _T_708' = _T_526' && _T_707';
    _T_709' = _T_518' || _T_708';
    _T_710' = _T_684' && _T_709';
    _T_711' = _T_654' && _T_710';
    _T_712' = if (_T_625') then (_T_653') else (_T_711');
    _T_713' = (io_pmp'[3bv3]).cfg.l == false;
    _T_714' = def' && _T_713';
    _T_734' = _T_680' & _T_145';
    _T_735' = _T_734' != 0bv3;
    _T_736' = _T_673' && _T_735';
    _T_752' = _T_533' & _T_87';
    _T_753' = _T_752' != 0bv3;
    _T_754' = _T_526' && _T_753';
    _T_755' = _T_736' || _T_754';
    _T_756' = _T_755' == false;
    _T_757' = (io_pmp'[3bv3]).mask[2:0];
    _T_758' = ~_T_757';
    _T_759' = _T_41' & _T_758';
    _T_760' = _T_759' == 0bv3;
    _T_762' = if (_T_625') then (_T_760') else (_T_756');
    _T_765' = _T_762' && (io_pmp'[3bv3]).cfg.r;
    _T_766' = _T_765' || _T_714';
    _T_767' = _T_762' && (io_pmp'[3bv3]).cfg.w;
    _T_768' = _T_767' || _T_714';
    _T_769' = _T_762' && (io_pmp'[3bv3]).cfg.x;
    _T_770' = _T_769' || _T_714';
    _T_771_cfg_x' = if (_T_712') then (_T_770') else (_T_624_cfg_x');
    _T_771_cfg_w' = if (_T_712') then (_T_768') else (_T_624_cfg_w');
    _T_771_cfg_r' = if (_T_712') then (_T_766') else (_T_624_cfg_r');
    _T_772' = (io_pmp'[2bv3]).cfg.a[1:1] == 1bv1;
    _T_777' = (io_pmp'[2bv3]).mask | _GEN_0';
    _T_784' = (io_pmp'[2bv3]).mask[31:3];
    _T_786' = ~_T_784';
    _T_787' = _T_672' & _T_786';
    _T_788' = _T_787' == 0bv29;
    _T_795' = _T_777'[2:0];
    _T_796' = _T_54' ^ _T_680';
    _T_797' = ~_T_795';
    _T_798' = _T_796' & _T_797';
    _T_799' = _T_798' == 0bv3;
    _T_800' = _T_788' && _T_799';
    _T_801' = (io_pmp'[2bv3]).cfg.a[0:0] == 1bv1;
    _GEN_68' = bv_zero_extend(2, (io_pmp'[1bv3]).addr);
    _T_807' = bv_left_shift(2, _GEN_68');
    _T_808' = ~_T_807';
    _T_809' = _T_808' | 3bv32;
    _T_810' = ~_T_809';
    _T_811' = _T_810'[31:3];
    _T_812' = 0bv1 ++ _T_43' < 0bv1 ++ _T_811';
    _T_819' = _T_43' ^ _T_811';
    _T_820' = _T_819' == 0bv29;
    _T_827' = _T_810'[2:0];
    _T_828' = 0bv1 ++ _T_87' < 0bv1 ++ _T_827';
    _T_829' = _T_820' && _T_828';
    _T_830' = _T_812' || _T_829';
    _T_831' = _T_830' == false;
    _T_854' = 0bv1 ++ _T_54' < 0bv1 ++ _T_680';
    _T_855' = _T_673' && _T_854';
    _T_856' = _T_665' || _T_855';
    _T_857' = _T_831' && _T_856';
    _T_858' = _T_801' && _T_857';
    _T_859' = if (_T_772') then (_T_800') else (_T_858');
    _T_860' = (io_pmp'[2bv3]).cfg.l == false;
    _T_861' = def' && _T_860';
    _T_881' = _T_827' & _T_145';
    _T_882' = _T_881' != 0bv3;
    _T_883' = _T_820' && _T_882';
    _T_899' = _T_680' & _T_87';
    _T_900' = _T_899' != 0bv3;
    _T_901' = _T_673' && _T_900';
    _T_902' = _T_883' || _T_901';
    _T_903' = _T_902' == false;
    _T_904' = (io_pmp'[2bv3]).mask[2:0];
    _T_905' = ~_T_904';
    _T_906' = _T_41' & _T_905';
    _T_907' = _T_906' == 0bv3;
    _T_909' = if (_T_772') then (_T_907') else (_T_903');
    _T_912' = _T_909' && (io_pmp'[2bv3]).cfg.r;
    _T_913' = _T_912' || _T_861';
    _T_914' = _T_909' && (io_pmp'[2bv3]).cfg.w;
    _T_915' = _T_914' || _T_861';
    _T_916' = _T_909' && (io_pmp'[2bv3]).cfg.x;
    _T_917' = _T_916' || _T_861';
    _T_918_cfg_x' = if (_T_859') then (_T_917') else (_T_771_cfg_x');
    _T_918_cfg_w' = if (_T_859') then (_T_915') else (_T_771_cfg_w');
    _T_918_cfg_r' = if (_T_859') then (_T_913') else (_T_771_cfg_r');
    _T_919' = (io_pmp'[1bv3]).cfg.a[1:1] == 1bv1;
    _T_924' = (io_pmp'[1bv3]).mask | _GEN_0';
    _T_931' = (io_pmp'[1bv3]).mask[31:3];
    _T_933' = ~_T_931';
    _T_934' = _T_819' & _T_933';
    _T_935' = _T_934' == 0bv29;
    _T_942' = _T_924'[2:0];
    _T_943' = _T_54' ^ _T_827';
    _T_944' = ~_T_942';
    _T_945' = _T_943' & _T_944';
    _T_946' = _T_945' == 0bv3;
    _T_947' = _T_935' && _T_946';
    _T_948' = (io_pmp'[1bv3]).cfg.a[0:0] == 1bv1;
    _GEN_81' = bv_zero_extend(2, (io_pmp'[0bv3]).addr);
    _T_954' = bv_left_shift(2, _GEN_81');
    _T_955' = ~_T_954';
    _T_956' = _T_955' | 3bv32;
    _T_957' = ~_T_956';
    _T_958' = _T_957'[31:3];
    _T_959' = 0bv1 ++ _T_43' < 0bv1 ++ _T_958';
    _T_966' = _T_43' ^ _T_958';
    _T_967' = _T_966' == 0bv29;
    _T_974' = _T_957'[2:0];
    _T_975' = 0bv1 ++ _T_87' < 0bv1 ++ _T_974';
    _T_976' = _T_967' && _T_975';
    _T_977' = _T_959' || _T_976';
    _T_978' = _T_977' == false;
    _T_1001' = 0bv1 ++ _T_54' < 0bv1 ++ _T_827';
    _T_1002' = _T_820' && _T_1001';
    _T_1003' = _T_812' || _T_1002';
    _T_1004' = _T_978' && _T_1003';
    _T_1005' = _T_948' && _T_1004';
    _T_1006' = if (_T_919') then (_T_947') else (_T_1005');
    _T_1007' = (io_pmp'[1bv3]).cfg.l == false;
    _T_1008' = def' && _T_1007';
    _T_1028' = _T_974' & _T_145';
    _T_1029' = _T_1028' != 0bv3;
    _T_1030' = _T_967' && _T_1029';
    _T_1046' = _T_827' & _T_87';
    _T_1047' = _T_1046' != 0bv3;
    _T_1048' = _T_820' && _T_1047';
    _T_1049' = _T_1030' || _T_1048';
    _T_1050' = _T_1049' == false;
    _T_1051' = (io_pmp'[1bv3]).mask[2:0];
    _T_1052' = ~_T_1051';
    _T_1053' = _T_41' & _T_1052';
    _T_1054' = _T_1053' == 0bv3;
    _T_1056' = if (_T_919') then (_T_1054') else (_T_1050');
    _T_1059' = _T_1056' && (io_pmp'[1bv3]).cfg.r;
    _T_1060' = _T_1059' || _T_1008';
    _T_1061' = _T_1056' && (io_pmp'[1bv3]).cfg.w;
    _T_1062' = _T_1061' || _T_1008';
    _T_1063' = _T_1056' && (io_pmp'[1bv3]).cfg.x;
    _T_1064' = _T_1063' || _T_1008';
    _T_1065_cfg_x' = if (_T_1006') then (_T_1064') else (_T_918_cfg_x');
    _T_1065_cfg_w' = if (_T_1006') then (_T_1062') else (_T_918_cfg_w');
    _T_1065_cfg_r' = if (_T_1006') then (_T_1060') else (_T_918_cfg_r');
    _T_1066' = (io_pmp'[0bv3]).cfg.a[1:1] == 1bv1;
    _T_1071' = (io_pmp'[0bv3]).mask | _GEN_0';
    _T_1078' = (io_pmp'[0bv3]).mask[31:3];
    _T_1080' = ~_T_1078';
    _T_1081' = _T_966' & _T_1080';
    _T_1082' = _T_1081' == 0bv29;
    _T_1089' = _T_1071'[2:0];
    _T_1090' = _T_54' ^ _T_974';
    _T_1091' = ~_T_1089';
    _T_1092' = _T_1090' & _T_1091';
    _T_1093' = _T_1092' == 0bv3;
    _T_1094' = _T_1082' && _T_1093';
    _T_1095' = (io_pmp'[0bv3]).cfg.a[0:0] == 1bv1;
    _T_1148' = 0bv1 ++ _T_54' < 0bv1 ++ _T_974';
    _T_1149' = _T_967' && _T_1148';
    _T_1150' = _T_959' || _T_1149';
    _T_1152' = _T_1095' && _T_1150';
    _T_1153' = if (_T_1066') then (_T_1094') else (_T_1152');
    _T_1154' = (io_pmp'[0bv3]).cfg.l == false;
    _T_1155' = def' && _T_1154';
    _T_1193' = _T_974' & _T_87';
    _T_1194' = _T_1193' != 0bv3;
    _T_1195' = _T_967' && _T_1194';
    _T_1197' = _T_1195' == false;
    _T_1198' = (io_pmp'[0bv3]).mask[2:0];
    _T_1199' = ~_T_1198';
    _T_1200' = _T_41' & _T_1199';
    _T_1201' = _T_1200' == 0bv3;
    _T_1203' = if (_T_1066') then (_T_1201') else (_T_1197');
    _T_1206' = _T_1203' && (io_pmp'[0bv3]).cfg.r;
    _T_1207' = _T_1206' || _T_1155';
    _T_1208' = _T_1203' && (io_pmp'[0bv3]).cfg.w;
    _T_1209' = _T_1208' || _T_1155';
    _T_1210' = _T_1203' && (io_pmp'[0bv3]).cfg.x;
    _T_1211' = _T_1210' || _T_1155';
    io_r' = if (_T_1153') then (_T_1207') else (_T_1065_cfg_r');
    io_w' = if (_T_1153') then (_T_1209') else (_T_1065_cfg_w');
    io_x' = if (_T_1153') then (_T_1211') else (_T_1065_cfg_x');
  }
}
